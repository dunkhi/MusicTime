@model MusicTime.Domain.View_Models.UserCreateViewModel

@{
  ViewBag.Title = "Create";
  Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script>
</head>
<h2>Create</h2>

@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

<div class="form-horizontal">
  <h4>Creat a new user.</h4>
  <hr />
  @Html.ValidationSummary(true, "", new { @class = "text-danger" })

  <div class="form-group">
    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.SelectedCountryIso3, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.DropDownListFor(x => Model.SelectedCountryIso3, new SelectList(Model.Countries, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "Country" })
      @Html.ValidationMessageFor(model => model.SelectedCountryIso3, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.SelectedRegionCode, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.DropDownListFor(x => Model.SelectedRegionCode, new SelectList(Model.Regions, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "Region" })
      @Html.ValidationMessageFor(model => model.SelectedRegionCode, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    <b>Select Roles:</b>
    @Html.ListBoxFor(r => r.selectedRoles, Model.Roles)
  </div>
  <div class="form-group">
    <label class="col-md-2 control-label">
      Select User Role
    </label>
    <div class="col-md-10">
      @foreach (var item in Model.RolesSelectList)
      {
        <input type="checkbox" name="htmlSelectedRoles" value="@item.Value" class="checkbox-inline" />
                  @Html.Label(item.Value, new { @class = "control-label" })
                }
    </div>
  </div>
  <div class="form-group">
    <div class="col-md-offset-2 col-md-10">
      <input type="submit" value="Create" class="btn btn-default" />
    </div>
  </div>
</div>
}

<div>
  @Html.ActionLink("Back to List", "Index")
</div>
